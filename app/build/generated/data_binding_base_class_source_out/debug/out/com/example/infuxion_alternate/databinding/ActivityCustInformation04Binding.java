// Generated by view binder compiler. Do not edit!
package com.example.infuxion_alternate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.infuxion_alternate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCustInformation04Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton architecht;

  @NonNull
  public final AppCompatButton btnNext;

  @NonNull
  public final RadioButton ca;

  @NonNull
  public final EditText companyaddress;

  @NonNull
  public final EditText companyname;

  @NonNull
  public final RadioButton consultant;

  @NonNull
  public final EditText currentexp;

  @NonNull
  public final RadioButton doctor;

  @NonNull
  public final EditText exp;

  @NonNull
  public final RadioButton freelancer;

  @NonNull
  public final RadioButton housewife;

  @NonNull
  public final LinearLayout linearLayoutSelfEm;

  @NonNull
  public final LinearLayout linearLayoutSelfProfessional;

  @NonNull
  public final RadioButton others;

  @NonNull
  public final RadioButton retired;

  @NonNull
  public final RadioGroup rgIfSelfProf;

  @NonNull
  public final RadioGroup rgIndustry;

  @NonNull
  public final RadioGroup rgOccupation;

  @NonNull
  public final RadioGroup rges;

  @NonNull
  public final RadioGroup rgselfemb;

  @NonNull
  public final RelativeLayout rlTitle;

  @NonNull
  public final RadioButton salaried;

  @NonNull
  public final EditText salary;

  @NonNull
  public final RadioButton selfEmployed;

  @NonNull
  public final RadioButton selfEmployedProfessional;

  @NonNull
  public final RadioButton student;

  @NonNull
  public final TextView tvHeadOne;

  private ActivityCustInformation04Binding(@NonNull LinearLayout rootView,
      @NonNull RadioButton architecht, @NonNull AppCompatButton btnNext, @NonNull RadioButton ca,
      @NonNull EditText companyaddress, @NonNull EditText companyname,
      @NonNull RadioButton consultant, @NonNull EditText currentexp, @NonNull RadioButton doctor,
      @NonNull EditText exp, @NonNull RadioButton freelancer, @NonNull RadioButton housewife,
      @NonNull LinearLayout linearLayoutSelfEm, @NonNull LinearLayout linearLayoutSelfProfessional,
      @NonNull RadioButton others, @NonNull RadioButton retired, @NonNull RadioGroup rgIfSelfProf,
      @NonNull RadioGroup rgIndustry, @NonNull RadioGroup rgOccupation, @NonNull RadioGroup rges,
      @NonNull RadioGroup rgselfemb, @NonNull RelativeLayout rlTitle, @NonNull RadioButton salaried,
      @NonNull EditText salary, @NonNull RadioButton selfEmployed,
      @NonNull RadioButton selfEmployedProfessional, @NonNull RadioButton student,
      @NonNull TextView tvHeadOne) {
    this.rootView = rootView;
    this.architecht = architecht;
    this.btnNext = btnNext;
    this.ca = ca;
    this.companyaddress = companyaddress;
    this.companyname = companyname;
    this.consultant = consultant;
    this.currentexp = currentexp;
    this.doctor = doctor;
    this.exp = exp;
    this.freelancer = freelancer;
    this.housewife = housewife;
    this.linearLayoutSelfEm = linearLayoutSelfEm;
    this.linearLayoutSelfProfessional = linearLayoutSelfProfessional;
    this.others = others;
    this.retired = retired;
    this.rgIfSelfProf = rgIfSelfProf;
    this.rgIndustry = rgIndustry;
    this.rgOccupation = rgOccupation;
    this.rges = rges;
    this.rgselfemb = rgselfemb;
    this.rlTitle = rlTitle;
    this.salaried = salaried;
    this.salary = salary;
    this.selfEmployed = selfEmployed;
    this.selfEmployedProfessional = selfEmployedProfessional;
    this.student = student;
    this.tvHeadOne = tvHeadOne;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustInformation04Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustInformation04Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cust_information04, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustInformation04Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.architecht;
      RadioButton architecht = ViewBindings.findChildViewById(rootView, id);
      if (architecht == null) {
        break missingId;
      }

      id = R.id.btnNext;
      AppCompatButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.ca;
      RadioButton ca = ViewBindings.findChildViewById(rootView, id);
      if (ca == null) {
        break missingId;
      }

      id = R.id.companyaddress;
      EditText companyaddress = ViewBindings.findChildViewById(rootView, id);
      if (companyaddress == null) {
        break missingId;
      }

      id = R.id.companyname;
      EditText companyname = ViewBindings.findChildViewById(rootView, id);
      if (companyname == null) {
        break missingId;
      }

      id = R.id.consultant;
      RadioButton consultant = ViewBindings.findChildViewById(rootView, id);
      if (consultant == null) {
        break missingId;
      }

      id = R.id.currentexp;
      EditText currentexp = ViewBindings.findChildViewById(rootView, id);
      if (currentexp == null) {
        break missingId;
      }

      id = R.id.doctor;
      RadioButton doctor = ViewBindings.findChildViewById(rootView, id);
      if (doctor == null) {
        break missingId;
      }

      id = R.id.exp;
      EditText exp = ViewBindings.findChildViewById(rootView, id);
      if (exp == null) {
        break missingId;
      }

      id = R.id.freelancer;
      RadioButton freelancer = ViewBindings.findChildViewById(rootView, id);
      if (freelancer == null) {
        break missingId;
      }

      id = R.id.housewife;
      RadioButton housewife = ViewBindings.findChildViewById(rootView, id);
      if (housewife == null) {
        break missingId;
      }

      id = R.id.linearLayoutSelfEm;
      LinearLayout linearLayoutSelfEm = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutSelfEm == null) {
        break missingId;
      }

      id = R.id.linearLayoutSelfProfessional;
      LinearLayout linearLayoutSelfProfessional = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutSelfProfessional == null) {
        break missingId;
      }

      id = R.id.others;
      RadioButton others = ViewBindings.findChildViewById(rootView, id);
      if (others == null) {
        break missingId;
      }

      id = R.id.retired;
      RadioButton retired = ViewBindings.findChildViewById(rootView, id);
      if (retired == null) {
        break missingId;
      }

      id = R.id.rgIfSelfProf;
      RadioGroup rgIfSelfProf = ViewBindings.findChildViewById(rootView, id);
      if (rgIfSelfProf == null) {
        break missingId;
      }

      id = R.id.rgIndustry;
      RadioGroup rgIndustry = ViewBindings.findChildViewById(rootView, id);
      if (rgIndustry == null) {
        break missingId;
      }

      id = R.id.rgOccupation;
      RadioGroup rgOccupation = ViewBindings.findChildViewById(rootView, id);
      if (rgOccupation == null) {
        break missingId;
      }

      id = R.id.rges;
      RadioGroup rges = ViewBindings.findChildViewById(rootView, id);
      if (rges == null) {
        break missingId;
      }

      id = R.id.rgselfemb;
      RadioGroup rgselfemb = ViewBindings.findChildViewById(rootView, id);
      if (rgselfemb == null) {
        break missingId;
      }

      id = R.id.rlTitle;
      RelativeLayout rlTitle = ViewBindings.findChildViewById(rootView, id);
      if (rlTitle == null) {
        break missingId;
      }

      id = R.id.salaried;
      RadioButton salaried = ViewBindings.findChildViewById(rootView, id);
      if (salaried == null) {
        break missingId;
      }

      id = R.id.salary;
      EditText salary = ViewBindings.findChildViewById(rootView, id);
      if (salary == null) {
        break missingId;
      }

      id = R.id.selfEmployed;
      RadioButton selfEmployed = ViewBindings.findChildViewById(rootView, id);
      if (selfEmployed == null) {
        break missingId;
      }

      id = R.id.selfEmployedProfessional;
      RadioButton selfEmployedProfessional = ViewBindings.findChildViewById(rootView, id);
      if (selfEmployedProfessional == null) {
        break missingId;
      }

      id = R.id.student;
      RadioButton student = ViewBindings.findChildViewById(rootView, id);
      if (student == null) {
        break missingId;
      }

      id = R.id.tvHeadOne;
      TextView tvHeadOne = ViewBindings.findChildViewById(rootView, id);
      if (tvHeadOne == null) {
        break missingId;
      }

      return new ActivityCustInformation04Binding((LinearLayout) rootView, architecht, btnNext, ca,
          companyaddress, companyname, consultant, currentexp, doctor, exp, freelancer, housewife,
          linearLayoutSelfEm, linearLayoutSelfProfessional, others, retired, rgIfSelfProf,
          rgIndustry, rgOccupation, rges, rgselfemb, rlTitle, salaried, salary, selfEmployed,
          selfEmployedProfessional, student, tvHeadOne);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
