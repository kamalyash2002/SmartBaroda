// Generated by view binder compiler. Do not edit!
package com.example.infuxion_alternate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.infuxion_alternate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCustReviewOneBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText aadhaar;

  @NonNull
  public final AppCompatButton btnNext;

  @NonNull
  public final EditText businessAcID;

  @NonNull
  public final EditText customerID;

  @NonNull
  public final EditText etDate;

  @NonNull
  public final EditText fatherFirst;

  @NonNull
  public final EditText fatherLast;

  @NonNull
  public final EditText fatherMiddle;

  @NonNull
  public final RadioButton female;

  @NonNull
  public final EditText firstName;

  @NonNull
  public final RadioButton individual;

  @NonNull
  public final EditText lastName;

  @NonNull
  public final EditText loanCycleId;

  @NonNull
  public final RadioButton male;

  @NonNull
  public final RadioButton married;

  @NonNull
  public final EditText middleName;

  @NonNull
  public final EditText motherFirst;

  @NonNull
  public final EditText motherLast;

  @NonNull
  public final EditText motherMiddle;

  @NonNull
  public final RadioButton no;

  @NonNull
  public final RadioButton nonResident;

  @NonNull
  public final EditText pan;

  @NonNull
  public final RadioGroup rgDisabled;

  @NonNull
  public final RadioGroup rgGender;

  @NonNull
  public final RadioGroup rgResidence;

  @NonNull
  public final RadioGroup rgStatus;

  @NonNull
  public final RelativeLayout rlTitle;

  @NonNull
  public final ScrollView scrollview;

  @NonNull
  public final RadioButton single;

  @NonNull
  public final Spinner spSalutation;

  @NonNull
  public final TextView titlebar;

  @NonNull
  public final RadioButton trans;

  @NonNull
  public final RadioButton widowed;

  @NonNull
  public final RadioButton yes;

  private ActivityCustReviewOneBinding(@NonNull LinearLayout rootView, @NonNull EditText aadhaar,
      @NonNull AppCompatButton btnNext, @NonNull EditText businessAcID,
      @NonNull EditText customerID, @NonNull EditText etDate, @NonNull EditText fatherFirst,
      @NonNull EditText fatherLast, @NonNull EditText fatherMiddle, @NonNull RadioButton female,
      @NonNull EditText firstName, @NonNull RadioButton individual, @NonNull EditText lastName,
      @NonNull EditText loanCycleId, @NonNull RadioButton male, @NonNull RadioButton married,
      @NonNull EditText middleName, @NonNull EditText motherFirst, @NonNull EditText motherLast,
      @NonNull EditText motherMiddle, @NonNull RadioButton no, @NonNull RadioButton nonResident,
      @NonNull EditText pan, @NonNull RadioGroup rgDisabled, @NonNull RadioGroup rgGender,
      @NonNull RadioGroup rgResidence, @NonNull RadioGroup rgStatus,
      @NonNull RelativeLayout rlTitle, @NonNull ScrollView scrollview, @NonNull RadioButton single,
      @NonNull Spinner spSalutation, @NonNull TextView titlebar, @NonNull RadioButton trans,
      @NonNull RadioButton widowed, @NonNull RadioButton yes) {
    this.rootView = rootView;
    this.aadhaar = aadhaar;
    this.btnNext = btnNext;
    this.businessAcID = businessAcID;
    this.customerID = customerID;
    this.etDate = etDate;
    this.fatherFirst = fatherFirst;
    this.fatherLast = fatherLast;
    this.fatherMiddle = fatherMiddle;
    this.female = female;
    this.firstName = firstName;
    this.individual = individual;
    this.lastName = lastName;
    this.loanCycleId = loanCycleId;
    this.male = male;
    this.married = married;
    this.middleName = middleName;
    this.motherFirst = motherFirst;
    this.motherLast = motherLast;
    this.motherMiddle = motherMiddle;
    this.no = no;
    this.nonResident = nonResident;
    this.pan = pan;
    this.rgDisabled = rgDisabled;
    this.rgGender = rgGender;
    this.rgResidence = rgResidence;
    this.rgStatus = rgStatus;
    this.rlTitle = rlTitle;
    this.scrollview = scrollview;
    this.single = single;
    this.spSalutation = spSalutation;
    this.titlebar = titlebar;
    this.trans = trans;
    this.widowed = widowed;
    this.yes = yes;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustReviewOneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustReviewOneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cust_review_one, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustReviewOneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aadhaar;
      EditText aadhaar = ViewBindings.findChildViewById(rootView, id);
      if (aadhaar == null) {
        break missingId;
      }

      id = R.id.btnNext;
      AppCompatButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.businessAcID;
      EditText businessAcID = ViewBindings.findChildViewById(rootView, id);
      if (businessAcID == null) {
        break missingId;
      }

      id = R.id.customerID;
      EditText customerID = ViewBindings.findChildViewById(rootView, id);
      if (customerID == null) {
        break missingId;
      }

      id = R.id.etDate;
      EditText etDate = ViewBindings.findChildViewById(rootView, id);
      if (etDate == null) {
        break missingId;
      }

      id = R.id.fatherFirst;
      EditText fatherFirst = ViewBindings.findChildViewById(rootView, id);
      if (fatherFirst == null) {
        break missingId;
      }

      id = R.id.fatherLast;
      EditText fatherLast = ViewBindings.findChildViewById(rootView, id);
      if (fatherLast == null) {
        break missingId;
      }

      id = R.id.fatherMiddle;
      EditText fatherMiddle = ViewBindings.findChildViewById(rootView, id);
      if (fatherMiddle == null) {
        break missingId;
      }

      id = R.id.female;
      RadioButton female = ViewBindings.findChildViewById(rootView, id);
      if (female == null) {
        break missingId;
      }

      id = R.id.firstName;
      EditText firstName = ViewBindings.findChildViewById(rootView, id);
      if (firstName == null) {
        break missingId;
      }

      id = R.id.individual;
      RadioButton individual = ViewBindings.findChildViewById(rootView, id);
      if (individual == null) {
        break missingId;
      }

      id = R.id.lastName;
      EditText lastName = ViewBindings.findChildViewById(rootView, id);
      if (lastName == null) {
        break missingId;
      }

      id = R.id.loanCycleId;
      EditText loanCycleId = ViewBindings.findChildViewById(rootView, id);
      if (loanCycleId == null) {
        break missingId;
      }

      id = R.id.male;
      RadioButton male = ViewBindings.findChildViewById(rootView, id);
      if (male == null) {
        break missingId;
      }

      id = R.id.married;
      RadioButton married = ViewBindings.findChildViewById(rootView, id);
      if (married == null) {
        break missingId;
      }

      id = R.id.middleName;
      EditText middleName = ViewBindings.findChildViewById(rootView, id);
      if (middleName == null) {
        break missingId;
      }

      id = R.id.motherFirst;
      EditText motherFirst = ViewBindings.findChildViewById(rootView, id);
      if (motherFirst == null) {
        break missingId;
      }

      id = R.id.motherLast;
      EditText motherLast = ViewBindings.findChildViewById(rootView, id);
      if (motherLast == null) {
        break missingId;
      }

      id = R.id.motherMiddle;
      EditText motherMiddle = ViewBindings.findChildViewById(rootView, id);
      if (motherMiddle == null) {
        break missingId;
      }

      id = R.id.no;
      RadioButton no = ViewBindings.findChildViewById(rootView, id);
      if (no == null) {
        break missingId;
      }

      id = R.id.nonResident;
      RadioButton nonResident = ViewBindings.findChildViewById(rootView, id);
      if (nonResident == null) {
        break missingId;
      }

      id = R.id.pan;
      EditText pan = ViewBindings.findChildViewById(rootView, id);
      if (pan == null) {
        break missingId;
      }

      id = R.id.rgDisabled;
      RadioGroup rgDisabled = ViewBindings.findChildViewById(rootView, id);
      if (rgDisabled == null) {
        break missingId;
      }

      id = R.id.rgGender;
      RadioGroup rgGender = ViewBindings.findChildViewById(rootView, id);
      if (rgGender == null) {
        break missingId;
      }

      id = R.id.rgResidence;
      RadioGroup rgResidence = ViewBindings.findChildViewById(rootView, id);
      if (rgResidence == null) {
        break missingId;
      }

      id = R.id.rgStatus;
      RadioGroup rgStatus = ViewBindings.findChildViewById(rootView, id);
      if (rgStatus == null) {
        break missingId;
      }

      id = R.id.rlTitle;
      RelativeLayout rlTitle = ViewBindings.findChildViewById(rootView, id);
      if (rlTitle == null) {
        break missingId;
      }

      id = R.id.scrollview;
      ScrollView scrollview = ViewBindings.findChildViewById(rootView, id);
      if (scrollview == null) {
        break missingId;
      }

      id = R.id.single;
      RadioButton single = ViewBindings.findChildViewById(rootView, id);
      if (single == null) {
        break missingId;
      }

      id = R.id.spSalutation;
      Spinner spSalutation = ViewBindings.findChildViewById(rootView, id);
      if (spSalutation == null) {
        break missingId;
      }

      id = R.id.titlebar;
      TextView titlebar = ViewBindings.findChildViewById(rootView, id);
      if (titlebar == null) {
        break missingId;
      }

      id = R.id.trans;
      RadioButton trans = ViewBindings.findChildViewById(rootView, id);
      if (trans == null) {
        break missingId;
      }

      id = R.id.widowed;
      RadioButton widowed = ViewBindings.findChildViewById(rootView, id);
      if (widowed == null) {
        break missingId;
      }

      id = R.id.yes;
      RadioButton yes = ViewBindings.findChildViewById(rootView, id);
      if (yes == null) {
        break missingId;
      }

      return new ActivityCustReviewOneBinding((LinearLayout) rootView, aadhaar, btnNext,
          businessAcID, customerID, etDate, fatherFirst, fatherLast, fatherMiddle, female,
          firstName, individual, lastName, loanCycleId, male, married, middleName, motherFirst,
          motherLast, motherMiddle, no, nonResident, pan, rgDisabled, rgGender, rgResidence,
          rgStatus, rlTitle, scrollview, single, spSalutation, titlebar, trans, widowed, yes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
