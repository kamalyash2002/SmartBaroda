// Generated by view binder compiler. Do not edit!
package com.example.infuxion_alternate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.infuxion_alternate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerification2Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnSubmit;

  @NonNull
  public final Button cameraButton;

  @NonNull
  public final LinearLayout docLayoutOne;

  @NonNull
  public final TextView frontStatus;

  @NonNull
  public final ImageView imageViewPick;

  @NonNull
  public final TextView mainDocText;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText panNo;

  @NonNull
  public final Spinner spDocs;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView tvBottomUploadTextFront;

  @NonNull
  public final Button uploadButton;

  private ActivityVerification2Binding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton btnSubmit, @NonNull Button cameraButton,
      @NonNull LinearLayout docLayoutOne, @NonNull TextView frontStatus,
      @NonNull ImageView imageViewPick, @NonNull TextView mainDocText, @NonNull EditText name,
      @NonNull EditText panNo, @NonNull Spinner spDocs, @NonNull TextView textView9,
      @NonNull TextView tvBottomUploadTextFront, @NonNull Button uploadButton) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.cameraButton = cameraButton;
    this.docLayoutOne = docLayoutOne;
    this.frontStatus = frontStatus;
    this.imageViewPick = imageViewPick;
    this.mainDocText = mainDocText;
    this.name = name;
    this.panNo = panNo;
    this.spDocs = spDocs;
    this.textView9 = textView9;
    this.tvBottomUploadTextFront = tvBottomUploadTextFront;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerification2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerification2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verification2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerification2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmit;
      AppCompatButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.cameraButton;
      Button cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.docLayoutOne;
      LinearLayout docLayoutOne = ViewBindings.findChildViewById(rootView, id);
      if (docLayoutOne == null) {
        break missingId;
      }

      id = R.id.frontStatus;
      TextView frontStatus = ViewBindings.findChildViewById(rootView, id);
      if (frontStatus == null) {
        break missingId;
      }

      id = R.id.imageViewPick;
      ImageView imageViewPick = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPick == null) {
        break missingId;
      }

      id = R.id.mainDocText;
      TextView mainDocText = ViewBindings.findChildViewById(rootView, id);
      if (mainDocText == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.panNo;
      EditText panNo = ViewBindings.findChildViewById(rootView, id);
      if (panNo == null) {
        break missingId;
      }

      id = R.id.spDocs;
      Spinner spDocs = ViewBindings.findChildViewById(rootView, id);
      if (spDocs == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.tvBottomUploadTextFront;
      TextView tvBottomUploadTextFront = ViewBindings.findChildViewById(rootView, id);
      if (tvBottomUploadTextFront == null) {
        break missingId;
      }

      id = R.id.uploadButton;
      Button uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new ActivityVerification2Binding((LinearLayout) rootView, btnSubmit, cameraButton,
          docLayoutOne, frontStatus, imageViewPick, mainDocText, name, panNo, spDocs, textView9,
          tvBottomUploadTextFront, uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
