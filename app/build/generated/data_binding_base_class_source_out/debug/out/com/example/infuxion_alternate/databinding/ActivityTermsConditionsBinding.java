// Generated by view binder compiler. Do not edit!
package com.example.infuxion_alternate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.infuxion_alternate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTermsConditionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout btnAllowPermissions;

  @NonNull
  public final AppCompatButton buttonLabel;

  @NonNull
  public final RelativeLayout rlTitle;

  @NonNull
  public final ScrollView svTnc;

  @NonNull
  public final AppCompatTextView txtTCLastUpdatedTime;

  private ActivityTermsConditionsBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout btnAllowPermissions, @NonNull AppCompatButton buttonLabel,
      @NonNull RelativeLayout rlTitle, @NonNull ScrollView svTnc,
      @NonNull AppCompatTextView txtTCLastUpdatedTime) {
    this.rootView = rootView;
    this.btnAllowPermissions = btnAllowPermissions;
    this.buttonLabel = buttonLabel;
    this.rlTitle = rlTitle;
    this.svTnc = svTnc;
    this.txtTCLastUpdatedTime = txtTCLastUpdatedTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTermsConditionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTermsConditionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_terms__conditions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTermsConditionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAllowPermissions;
      RelativeLayout btnAllowPermissions = ViewBindings.findChildViewById(rootView, id);
      if (btnAllowPermissions == null) {
        break missingId;
      }

      id = R.id.buttonLabel;
      AppCompatButton buttonLabel = ViewBindings.findChildViewById(rootView, id);
      if (buttonLabel == null) {
        break missingId;
      }

      id = R.id.rlTitle;
      RelativeLayout rlTitle = ViewBindings.findChildViewById(rootView, id);
      if (rlTitle == null) {
        break missingId;
      }

      id = R.id.svTnc;
      ScrollView svTnc = ViewBindings.findChildViewById(rootView, id);
      if (svTnc == null) {
        break missingId;
      }

      id = R.id.txtTCLastUpdatedTime;
      AppCompatTextView txtTCLastUpdatedTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTCLastUpdatedTime == null) {
        break missingId;
      }

      return new ActivityTermsConditionsBinding((LinearLayout) rootView, btnAllowPermissions,
          buttonLabel, rlTitle, svTnc, txtTCLastUpdatedTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
